# The following lines were added by compinstall

zstyle ':completion:*' completer _complete _ignored _approximate
zstyle ':completion:*' expand prefix suffix
zstyle ':completion:*' list-suffixes true
zstyle ':completion:*' matcher-list \
  '' \
  'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' \
  'r:|[._-]=** r:|=**'
zstyle ':completion:*' max-errors 4
zstyle ':completion:*' original false
zstyle ':completion:*' preserve-prefix '//[^/]##/'

autoload -Uz compinit
compinit -u
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
zstyle ':completion::complete:*' use-cache 1

# Should be before all other bindkey's
bindkey -v

HISTFILE=${HISTFILE:-~/.zhistory}
HISTSIZE=2000
SAVEHIST=$HISTSIZE
setopt appendhistory histignorespace histignorealldups
bindkey "^[[A" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward

setopt autocd
unsetopt beep extendedglob nomatch notify
# End of lines configured by zsh-newuser-install

export PS1='%1~ %(!.#.$)%b%f '

# Enables custom Vim mappings on <C-q> & <C-s>
stty -ixon

# Fixes newline issues in terminal with %'s
stty sane

# Usage: p1 < patchfile
alias p1="patch -p1"

setup-distcc() {
  [[ $PATH != *distcc* ]] \
  && export PATH="/usr/lib/distcc/bin:${PATH}"
}

setup-ccache() {
  [[ $PATH != *ccache* ]] && export PATH="/usr/lib/ccache/bin:$PATH"
  export CCACHE_DIR="/home/.ccache"
}

export EDITOR="vim"
export LESS="-iSXFR"

alias sr='. /etc/profile;. ~/.zshrc;. ~/.zshenv 2> /dev/null'
alias vr="vim ~/.zshrc && sr"
alias ve="vim ~/.zshenv && sr"
svr() { vim ${ZSHRC_D:-/etc/zsh/zshrc.d}/misc; }

# Copy to clipboard
xc() {
  if command -v wl-copy &>/dev/null; then
    wl-copy 2>/dev/null
  elif command -v xclip &>/dev/null; then
    xclip -selection clipboard 2>/dev/null
  elif command -v termux-clipboard-set &>/dev/null; then
    termux-clipboard-set 2>/dev/null
  elif command -v pbcopy &>/dev/null; then
    pbcopy
  else
    return 1
  fi
}

# Paste from clipboard
xp() {
  if command -v wl-paste &>/dev/null; then
    wl-paste 2>/dev/null
  elif command -v xclip &>/dev/null; then
    xclip -selection clipboard -o 2>/dev/null
  elif command -v termux-clipboard-get &>/dev/null; then
    termux-clipboard-get 2>/dev/null
  elif command -v pbpaste &>/dev/null; then
    pbpaste
  else
    return 1
  fi
}

alias ecurr="sudo watch -ctn 30 genlop -c"
alias ehist="sudo genlop -it"
alias ecln="sudo emerge --ask --depclean"
alias eclnd="sudo eclean-dist --deep --fetch-restricted"

esync() {
  local sync_log="/tmp/.emaint.log"

  if sudo sh -c "
    printf 'Syncing... '
    emaint sync ${1:+-r} ${1:--a} -a &> $sync_log
  "
  then
    echo "done"
  else
    echo "FAILED $sync_log"
    return 1
  fi
}

emrg() {
  if (( $# )); then
    if [[ "$1" == -* ]]; then
      sudo emerge "$@"
    else
      sudo emerge -av --quiet-build "$@"
    fi
  else
    sudo emerge -avuUDN --quiet-build --keep-going @world
  fi
}

alias bfs-usage="btrfs filesystem usage"
alias bfs-du="btrfs fi du"
alias bfs-df="btrfs fi df"
alias bfs-comp="sudo compsize"
alias bfs-defrag="btrfs filesystem defragment -r -clzo"

alias cpv="rsync -rh --info=progress2"
# Should remove empty source dirs afterwards
alias mvv="rsync -rh --info=progress2 --remove-source-files"

alias bat=battery
alias ccs="CCACHE_DIR=/var/cache/ccache watch -d -n13 ccache -sv"
alias ptop="sudo powertop"
alias psw="sudo /usr/local/bin/psw"
alias rbt="sudo reboot"
alias rn="perl-rename"
alias shtd="echo 'Shutdown enqueued...'; sudo shutdown -h"
alias xb="sudo xb"
alias xs="xargs -I{}"
alias mc="sudo make menuconfig"
alias mco="sudo make oldconfig"
alias cal="cal -mn2"

alias df="df -h"
alias du="du -h"

alias distcc-mon="DISTCC_DIR=/var/tmp/portage/.distcc distccmon-text 3"
alias distcc-mon-h="DISTCC_DIR=/home/.portage/tmp/portage/.distcc distccmon-text 3"

rs() {
  if command -v gammastep &>/dev/null; then
    local app="gammastep"
  elif command -v redshift &>/dev/null; then
    local app="redshift"
  else
    echo "Sorry, can't\!"
    return 1
  fi
  if tty | grep -q tty || [[ "$TERM" == "screen.linux" ]]; then
    local use_drm=1
  fi
  pkill $app
  $app ${use_drm:+-mdrm} ${1:+-PO ${1}00K} ${1:--x} ${2:+-g $2} &
  disown
}

bc() { command bc -l <<< "$*"; }
dc() { date --date "$@"; }

alias epoch-seconds="date +%s"

backup() {
  local date=`date +%Y-%m-%d`
  local name=`basename ${*[-1]}`
  7z a -mhe=on -mhc=on -m0=lzma2 -mx=9 -ms=128f512m -v4g -p \
    $name-$date.7z $*
}

x() { sed -n $1p $2; }
bt-restart() {
  sudo rc-service bluealsa stop
  sudo rc-service bluetooth stop
  sudo rc-service bluetooth start
  sudo rc-service bluealsa start
}

my-du() { du -hd1 -BM ${1:-.} | sort -n; }
my-ping() { while ! ping ${1:-gentoo.org}; do sleep 3; done }
my-sdiff() {
  local S
  for i in "$@"; do
    [ "$i" = -s ] && S=1
  done
  sdiff -tw `tput cols` $@ \
  | ([ $S ] && cat || sed -Ee "s/^(.+ \| .*|.+<| +> .*)$/${esc}[32m\1${esc}[0m/") \
  | less
}

zram-stats() {
  while true; do
    local s=(`cat /sys/block/zram0/mm_stat`)
    clear
    echo "Orig: $(($s[1]/1024**2))M"
    echo "Used: $(($s[3]/1024**2))M / $(($s[4]/1024**2))M"
    echo "Comp: $((($s[1]-$s[2])*100/$s[1]))%"
    sleep 7
  done
}

alias ccache-stats="CCACHE_DIR=/home/.ccache watch -d -n 31 ccache --show-stats"

ccache-enable() {
  export PATH="/usr/lib/ccache/bin${PATH:+:}$PATH"
  export CCACHE_DIR="/home/.ccache"
  echo "ccache enabled!"
}
