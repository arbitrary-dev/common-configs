if [[ -d "${ZSHRC_D:-/etc/zsh/zshrc.d}" ]]; then
  for f in "${ZSHRC_D:-/etc/zsh/zshrc.d}"/*; do
    source $f
  done
fi

export PS1='%B%F{red}'$PS1

export NUMCPUS=$(nproc)
export NUMCPUSPLUSONE=$(( NUMCPUS + 1 ))
export MAKEOPTS="-j${NUMCPUSPLUSONE} -l${NUMCPUS}"
export EMERGE_DEFAULT_OPTS="--jobs=${NUMCPUSPLUSONE} --load-average=${NUMCPUS}"

alias sws="swapon --show=name,size,used"

alias regen-manifest="repoman manifest"

alias emrg-c="FEATURES=ccache emrg"
alias emrg-d="FEATURES=distcc MAKEOPTS='-j25 -l2' emrg"
alias emrg-h="PORTAGE_TMPDIR=/home/.portage-tmpdir emrg"
alias emrg-hc="PORTAGE_TMPDIR=/home/.portage-tmpdir emrg-c"
alias emrg-hd="PORTAGE_TMPDIR=/home/.portage-tmpdir emrg-d"

alias eadd="emerge --noreplace"
alias emask="qlist -IC"

crossdev-netbook() {
  crossdev --target i686-pc-linux-gnu \
    --binutils '=2.34*' --gcc '=9.3*' --kernel '=5.4*' --libc '=2.32*'
}

alias docker-clean="docker system prune --volumes"

resize-tmp() {
  local size="$1"
  if [ -z "$size" ]; then
    [ `df --output=size /tmp | tail -1` == "3.0G" ] \
    && size="10g" || size="3g"
  fi
  if mount -o remount,size=${size} /tmp; then
    echo "Size of /tmp is set to: $size"
  fi
}

upd-time() {
  echo "Before: " $(date) && \
  rc-service ntp-client start && \
  echo "After: " $(date)
}

efi-sign() {
  [[ -z ${SECUREBOOTKEY} && -z ${SECUREBOOTCERT} ]] \
  && eval "$(grep ^SECUREBOOT `which buildkernel`)"

  if [[ -z ${SECUREBOOTKEY} || -z ${SECUREBOOTCERT} ]]; then
    echo "Please specify SECUREBOOTKEY and SECUREBOOTCERT env vars."
    return 1
  fi

  local in="$1"
  local out="$in.signed"

  if sbsign --key "${SECUREBOOTKEY}" --cert "${SECUREBOOTCERT}" \
            --output "$out" \
            "$in"; then
    echo "Signed: $out"
  fi
}
